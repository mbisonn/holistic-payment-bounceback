-- Fix RLS lints for public.user_roles
-- - Avoid per-row re-evaluation by wrapping auth.* calls with (select ...)
-- - Consolidate multiple permissive policies into single policies per action

-- Ensure RLS is enabled
ALTER TABLE public.user_roles ENABLE ROW LEVEL SECURITY;

-- Drop existing SELECT policies to consolidate into one
DO $$
DECLARE
  pol RECORD;
BEGIN
  FOR pol IN
    SELECT policyname FROM pg_policies 
    WHERE schemaname='public' AND tablename='user_roles' AND cmd='select'
  LOOP
    EXECUTE format('DROP POLICY IF EXISTS %I ON public.user_roles', pol.policyname);
  END LOOP;
END $$;

-- Create consolidated SELECT policy (idempotent)
DROP POLICY IF EXISTS user_roles_select_combined ON public.user_roles;
CREATE POLICY user_roles_select_combined
ON public.user_roles
FOR SELECT
TO authenticated
USING (
  -- Owner can read their own roles
  user_id = (SELECT auth.uid())
  OR
  -- Verified/Admin can read all roles
  EXISTS (
    SELECT 1 FROM public.user_roles ur
    WHERE ur.user_id = (SELECT auth.uid())
      AND ur.role IN ('admin','verified')
  )
);

-- Fix DELETE policies: ensure only one permissive delete policy exists
DO $$
DECLARE
  pol RECORD;
BEGIN
  IF EXISTS (
    SELECT 1 FROM pg_policies 
    WHERE schemaname='public' AND tablename='user_roles' AND cmd='delete' AND policyname <> 'user_roles_delete_admin_only'
  ) THEN
    -- Drop all delete policies except our canonical one (if any others exist)
    FOR pol IN
      SELECT policyname FROM pg_policies 
      WHERE schemaname='public' AND tablename='user_roles' AND cmd='delete' AND policyname <> 'user_roles_delete_admin_only'
    LOOP
      EXECUTE format('DROP POLICY IF EXISTS %I ON public.user_roles', pol.policyname);
    END LOOP;
  END IF;
END $$;

-- Recreate canonical DELETE policy (idempotent)
DROP POLICY IF EXISTS user_roles_delete_admin_only ON public.user_roles;
CREATE POLICY user_roles_delete_admin_only
ON public.user_roles
FOR DELETE
TO authenticated
USING (
  EXISTS (
    SELECT 1 FROM public.user_roles ur
    WHERE ur.user_id = (SELECT auth.uid())
      AND ur.role = 'admin'
  )
);
