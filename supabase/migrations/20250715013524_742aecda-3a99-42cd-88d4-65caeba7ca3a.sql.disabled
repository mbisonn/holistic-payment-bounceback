-- Fix all performance and security warnings - Final Version

-- 1. Drop and recreate the has_role function to fix parameter name conflict
-- Removed DROP FUNCTION to avoid dependency errors; keep idempotent CREATE OR REPLACE below

CREATE OR REPLACE FUNCTION public.has_role(check_user_id uuid, role_name text)
RETURNS boolean
LANGUAGE sql
STABLE SECURITY DEFINER
SET search_path = public
AS $$
  SELECT EXISTS (
    SELECT 1 
    FROM public.user_roles ur
    WHERE ur.user_id = check_user_id
      AND ur.role = role_name::app_role
  );
$$;

-- 2. Add missing indexes for performance optimization
CREATE INDEX IF NOT EXISTS idx_orders_payment_reference ON public.orders(payment_reference);
CREATE INDEX IF NOT EXISTS idx_orders_customer_phone ON public.orders(customer_phone);
CREATE INDEX IF NOT EXISTS idx_profiles_email ON public.profiles(email);
CREATE INDEX IF NOT EXISTS idx_profiles_role ON public.profiles(role);
CREATE INDEX IF NOT EXISTS idx_product_reviews_product_id_approved ON public.product_reviews(product_id, is_approved);
CREATE INDEX IF NOT EXISTS idx_product_reviews_rating ON public.product_reviews(rating);
CREATE INDEX IF NOT EXISTS idx_email_settings_smtp_enabled ON public.email_settings(smtp_enabled);
CREATE INDEX IF NOT EXISTS idx_abandoned_checkouts_notified ON public.abandoned_checkouts(notified);
CREATE INDEX IF NOT EXISTS idx_abandoned_checkouts_created_at ON public.abandoned_checkouts(created_at);

-- 3. Add partial indexes for filtered queries
CREATE INDEX IF NOT EXISTS idx_orders_pending_status ON public.orders(created_at) 
WHERE status = 'pending';

CREATE INDEX IF NOT EXISTS idx_orders_failed_payment ON public.orders(created_at, customer_email) 
WHERE payment_status = 'failed';

CREATE INDEX IF NOT EXISTS idx_products_active_price ON public.products(price, created_at) 
WHERE is_active = true;

CREATE INDEX IF NOT EXISTS idx_email_logs_failed ON public.email_logs(created_at, recipient_email) 
WHERE status = 'failed';

-- 4. Add text search indexes
CREATE INDEX IF NOT EXISTS idx_products_name_search ON public.products USING gin(to_tsvector('english', name));
CREATE INDEX IF NOT EXISTS idx_products_description_search ON public.products USING gin(to_tsvector('english', description));
CREATE INDEX IF NOT EXISTS idx_customer_tags_name_search ON public.customer_tags USING gin(to_tsvector('english', name));

-- 5. Create optimized admin check function
CREATE OR REPLACE FUNCTION public.current_user_is_admin()
RETURNS boolean
LANGUAGE sql
STABLE SECURITY DEFINER
SET search_path = public
AS $$
  SELECT EXISTS (
    SELECT 1 
    FROM public.user_roles ur
    WHERE ur.user_id = auth.uid()
      AND ur.role = 'admin'::app_role
  );
$$;

-- 6. Optimize statistics collection for better query planning
ALTER TABLE public.orders ALTER COLUMN created_at SET STATISTICS 1000;
ALTER TABLE public.orders ALTER COLUMN customer_email SET STATISTICS 1000;
ALTER TABLE public.orders ALTER COLUMN status SET STATISTICS 1000;
ALTER TABLE public.orders ALTER COLUMN payment_status SET STATISTICS 1000;
ALTER TABLE public.products ALTER COLUMN name SET STATISTICS 1000;
ALTER TABLE public.products ALTER COLUMN is_active SET STATISTICS 1000;
ALTER TABLE public.user_roles ALTER COLUMN user_id SET STATISTICS 1000;
ALTER TABLE public.user_roles ALTER COLUMN role SET STATISTICS 1000;

-- 7. Update table statistics
ANALYZE public.orders;
ANALYZE public.products;
ANALYZE public.user_roles;
ANALYZE public.profiles;
ANALYZE public.email_logs;
ANALYZE public.invoices;
ANALYZE public.order_bumps;
ANALYZE public.upsell_products;
ANALYZE public.shipping_settings;
ANALYZE public.email_templates;
ANALYZE public.email_campaigns;
ANALYZE public.customer_tags;
ANALYZE public.customer_tag_assignments;
ANALYZE public.product_reviews;
ANALYZE public.analytics_metrics;
ANALYZE public.abandoned_checkouts;